name: Build Package for Debian with Lintian Validation

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version of the software to build
        type: string
        required: true
      build_version:
        description: The build version
        type: string
        required: true
      architecture:
        description: Architecture to build (amd64, arm64, armel, armhf, ppc64el, s390x, riscv64, or 'all' for all architectures)
        type: choice
        default: 'all'
        options:
          - 'all'
          - 'amd64'
          - 'arm64'
          - 'armel'
          - 'armhf'
          - 'ppc64el'
          - 's390x'
          - 'riscv64'
      lintian_check:
        description: Enable lintian validation
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  build:
    name: Build with Lintian Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build multi-architecture packages
        uses: ranjithrajv/debian-multiarch-builder@v1
        with:
          config-file: 'multiarch-config.yaml'
          version: ${{ inputs.version }}
          build-version: ${{ inputs.build_version }}
          architecture: ${{ inputs.architecture }}
          lintian-check: ${{ inputs.lintian_check }}

      - name: Upload build summary
        uses: actions/upload-artifact@v4
        with:
          name: build-summary
          path: 'build-summary.json'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-packages
          path: '*.deb'

  release:
    name: Create Draft Release
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          name: debian-packages

      - name: Publish Release Draft
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: '*.deb'
          name: ${{ inputs.version }}+${{ inputs.build_version }}
          tag_name: ${{ inputs.version }}
          fail_on_unmatched_files: true

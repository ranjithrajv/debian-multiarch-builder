# Example configuration demonstrating user overrides for distribution-specific architecture support
# NOTE: The action has built-in rules for i386, armel, and riscv64
# This example shows how to override those rules if your upstream supports different distributions
package_name: example-package
github_repo: owner/repository
artifact_format: tar.gz

# Debian distributions to build for
debian_distributions:
  - bookworm
  - trixie
  - forky
  - sid

# Architecture mappings
# {version} will be replaced with the actual version number
architectures:
  amd64:
    release_pattern: "example_{version}_x86_64.tar.gz"

  arm64:
    release_pattern: "example_{version}_aarch64.tar.gz"

  armel:
    release_pattern: "example_{version}_arm.tar.gz"

  i386:
    release_pattern: "example_{version}_i686.tar.gz"

# Optional: Override built-in distribution rules
# The action automatically applies these rules (no config needed):
#   - i386: Bookworm only
#   - armel: Bookworm only
#   - riscv64: Trixie+ only
#
# Only use distribution_arch_overrides if your upstream has different support
# Example: if upstream still provides armel for Trixie:
# distribution_arch_overrides:
#   armel:
#     distributions:
#       - bookworm
#       - trixie

# Optional: If binary is in a subdirectory after extraction
# binary_path: ""
